eclipse.preferences.version=1
problemStatement=GameOnABoard.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.8.0_25" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement" id\="ProblemStatement0">\n  <void property\="className">\n   <string>GameOnABoard</string>\n  </void>\n  <void property\="contestName">\n   <string>SRM 583 DIV 2 - 900 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;GameOnABoard&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;p&gt;&lt;i&gt;This problem statement contains superscripts and/or subscripts. These may not display properly outside the applet.&lt;/i&gt;&lt;/p&gt;\n\n&lt;p&gt;Alice and Bob are playing a game on a rectangular board. We use (i, j) to denote the j-th cell in the i-th row (0-based index). Each cell has a cost of either 0 or 1 and they are given by the String[] &lt;b&gt;cost&lt;/b&gt;. The j-th character of i-th element in &lt;b&gt;cost&lt;/b&gt; (0-based index) denotes the cost of cell (i, j). A path between two distinct cells (x&lt;sub&gt;1&lt;/sub&gt;, y&lt;sub&gt;1&lt;/sub&gt;) and (x&lt;sub&gt;2&lt;/sub&gt;, y&lt;sub&gt;2&lt;/sub&gt;) is a sequence of cells (c&lt;sub&gt;0&lt;/sub&gt;, c&lt;sub&gt;1&lt;/sub&gt;, ..., c&lt;sub&gt;k&lt;/sub&gt;) such that c&lt;sub&gt;0&lt;/sub&gt;\=(x&lt;sub&gt;1&lt;/sub&gt;, y&lt;sub&gt;1&lt;/sub&gt;), c&lt;sub&gt;k&lt;/sub&gt;\=(x&lt;sub&gt;2&lt;/sub&gt;, y&lt;sub&gt;2&lt;/sub&gt;) and for each i from 0 to k-1, cells c&lt;sub&gt;i&lt;/sub&gt; and c&lt;sub&gt;i+1&lt;/sub&gt; have a common side. Cost of a path is the total cost of cells on this path.&lt;/p&gt;\n\n&lt;p&gt;The game is played as follows\: First Alice chooses a cell (x&lt;sub&gt;1&lt;/sub&gt;,y&lt;sub&gt;1&lt;/sub&gt;), then Bob chooses a cell (x&lt;sub&gt;2&lt;/sub&gt;,y&lt;sub&gt;2&lt;/sub&gt;) which is different from (x&lt;sub&gt;1&lt;/sub&gt;, y&lt;sub&gt;1&lt;/sub&gt;). Finally, they compute the value L\: the minimum cost of a path between (x&lt;sub&gt;1&lt;/sub&gt;,y&lt;sub&gt;1&lt;/sub&gt;) and (x&lt;sub&gt;2&lt;/sub&gt;,y&lt;sub&gt;2&lt;/sub&gt;). Alice&apos;s goal is to minimize L, and Bob&apos;s goal is to maximize L. Compute and return the value L that will be achieved if both players play optimally.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;GameOnABoard&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;optimalChoice&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;String[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;int optimalChoice(String[] cost)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;64&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Notes&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Two cells (x&lt;sub&gt;1&lt;/sub&gt;, y&lt;sub&gt;1&lt;/sub&gt;) and (x&lt;sub&gt;2&lt;/sub&gt;, y&lt;sub&gt;2&lt;/sub&gt;) have a common side if |x&lt;sub&gt;1&lt;/sub&gt;-x&lt;sub&gt;2&lt;/sub&gt;|+|y&lt;sub&gt;1&lt;/sub&gt;-y&lt;sub&gt;2&lt;/sub&gt;|\=1.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;cost&lt;/b&gt; will contain between 2 and 40 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;cost&lt;/b&gt; will be between 2 and 40 characters long, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;cost&lt;/b&gt; will be of the same length.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;cost&lt;/b&gt; will consist of &apos;0&apos;s and &apos;1&apos;s only.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;11&amp;quot;,\n &amp;quot;10&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;p&gt;Regardless of Alice&apos;s choice, Bob can always achieve L\=2 by choosing the opposite corner.&lt;/p&gt;\n&lt;p&gt;Sometimes he also has other optimal moves. For example, if Alice chooses (0,0), Bob can choose any of the other three cells to get L\=2.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;01&amp;quot;,\n &amp;quot;10&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;p&gt;Alice will not choose the cell (0,1), nor the cell (1,0). If she chooses one of those, Bob will choose the other one and L will be 2.&lt;/p&gt;\n&lt;p&gt;Alice prefers the other option. If she chooses one of the cells (0,0) or (1,1), Bob can only achieve L\=1.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;111001&amp;quot;,\n &amp;quot;001000&amp;quot;,\n &amp;quot;111111&amp;quot;,\n &amp;quot;001111&amp;quot;,\n &amp;quot;001100&amp;quot;,\n &amp;quot;001011&amp;quot;,\n &amp;quot;111001&amp;quot;,\n &amp;quot;010011&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;001001101011&amp;quot;,\n &amp;quot;110011001101&amp;quot;,\n &amp;quot;111111000001&amp;quot;,\n &amp;quot;111101010001&amp;quot;,\n &amp;quot;011100101111&amp;quot;,\n &amp;quot;110010111000&amp;quot;,\n &amp;quot;111111110101&amp;quot;,\n &amp;quot;111011110111&amp;quot;,\n &amp;quot;111100100011&amp;quot;,\n &amp;quot;000000000110&amp;quot;,\n &amp;quot;101011011110&amp;quot;,\n &amp;quot;011111000111&amp;quot;,\n &amp;quot;101111001011&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 5&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;4)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;110010100101010110100010001100111011&amp;quot;,\n &amp;quot;001000000110100011010100000001001000&amp;quot;,\n &amp;quot;011000110111101001011101110111000100&amp;quot;,\n &amp;quot;111001011000100101111010100110110011&amp;quot;,\n &amp;quot;111000011101001010000100001010000010&amp;quot;,\n &amp;quot;111001110010100101000001001100011011&amp;quot;,\n &amp;quot;111110100111010101100000100111000111&amp;quot;,\n &amp;quot;011111111100100111111110000001110111&amp;quot;,\n &amp;quot;110000010101001111100011110000001000&amp;quot;,\n &amp;quot;010010110111111100011101100000011010&amp;quot;,\n &amp;quot;110001100001111001101000101110110001&amp;quot;,\n &amp;quot;110010000111011110000010110111010101&amp;quot;,\n &amp;quot;100100110101001001101000001101101101&amp;quot;,\n &amp;quot;001011101101001100111110101111001110&amp;quot;,\n &amp;quot;111010111111111100110100000011111100&amp;quot;,\n &amp;quot;110101101000001001000100101011100000&amp;quot;,\n &amp;quot;011011001011010001001000100000110101&amp;quot;,\n &amp;quot;011111111100000011010111010011010100&amp;quot;,\n &amp;quot;111001111110001110001110010100111010&amp;quot;,\n &amp;quot;000001111000001100101010000001101110&amp;quot;,\n &amp;quot;010000110000010010111110111000010101&amp;quot;,\n &amp;quot;100010010100110011000111101001101011&amp;quot;,\n &amp;quot;111010110001101011010001111101111100&amp;quot;,\n &amp;quot;000111110000110000000101100101000110&amp;quot;,\n &amp;quot;110000010111001001110001101010111100&amp;quot;,\n &amp;quot;011111101101001011011010011111100010&amp;quot;,\n &amp;quot;110101111101010100110010000011001101&amp;quot;,\n &amp;quot;101101111001010100101111100001110001&amp;quot;,\n &amp;quot;000110010100101111011011110010010010&amp;quot;,\n &amp;quot;110101010011101000111011100000010011&amp;quot;,\n &amp;quot;110001010001110011010100110000010001&amp;quot;,\n &amp;quot;111010101100111100100011001101010100&amp;quot;,\n &amp;quot;011000000000100001011010000100010001&amp;quot;,\n &amp;quot;100000110110000001010001001111010000&amp;quot;,\n &amp;quot;100011111110010011011011001110011111&amp;quot;,\n &amp;quot;101100001111100101001101100000100001&amp;quot;,\n &amp;quot;010000111011010110011001110011111000&amp;quot;,\n &amp;quot;100010100111110111001010100101111010&amp;quot;,\n &amp;quot;000110011110111011111000101000001000&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 7&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>optimalChoice</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>cost</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>[Ljava.lang.String;</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>java.lang.Integer</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="2">\n          <void index\="0">\n           <string>11</string>\n          </void>\n          <void index\="1">\n           <string>10</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <int>2</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="2">\n          <void index\="0">\n           <string>01</string>\n          </void>\n          <void index\="1">\n           <string>10</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <int>1</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="8">\n          <void index\="0">\n           <string>111001</string>\n          </void>\n          <void index\="1">\n           <string>001000</string>\n          </void>\n          <void index\="2">\n           <string>111111</string>\n          </void>\n          <void index\="3">\n           <string>001111</string>\n          </void>\n          <void index\="4">\n           <string>001100</string>\n          </void>\n          <void index\="5">\n           <string>001011</string>\n          </void>\n          <void index\="6">\n           <string>111001</string>\n          </void>\n          <void index\="7">\n           <string>010011</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <int>3</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase3">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="13">\n          <void index\="0">\n           <string>001001101011</string>\n          </void>\n          <void index\="1">\n           <string>110011001101</string>\n          </void>\n          <void index\="2">\n           <string>111111000001</string>\n          </void>\n          <void index\="3">\n           <string>111101010001</string>\n          </void>\n          <void index\="4">\n           <string>011100101111</string>\n          </void>\n          <void index\="5">\n           <string>110010111000</string>\n          </void>\n          <void index\="6">\n           <string>111111110101</string>\n          </void>\n          <void index\="7">\n           <string>111011110111</string>\n          </void>\n          <void index\="8">\n           <string>111100100011</string>\n          </void>\n          <void index\="9">\n           <string>000000000110</string>\n          </void>\n          <void index\="10">\n           <string>101011011110</string>\n          </void>\n          <void index\="11">\n           <string>011111000111</string>\n          </void>\n          <void index\="12">\n           <string>101111001011</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <int>5</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase4">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="39">\n          <void index\="0">\n           <string>110010100101010110100010001100111011</string>\n          </void>\n          <void index\="1">\n           <string>001000000110100011010100000001001000</string>\n          </void>\n          <void index\="2">\n           <string>011000110111101001011101110111000100</string>\n          </void>\n          <void index\="3">\n           <string>111001011000100101111010100110110011</string>\n          </void>\n          <void index\="4">\n           <string>111000011101001010000100001010000010</string>\n          </void>\n          <void index\="5">\n           <string>111001110010100101000001001100011011</string>\n          </void>\n          <void index\="6">\n           <string>111110100111010101100000100111000111</string>\n          </void>\n          <void index\="7">\n           <string>011111111100100111111110000001110111</string>\n          </void>\n          <void index\="8">\n           <string>110000010101001111100011110000001000</string>\n          </void>\n          <void index\="9">\n           <string>010010110111111100011101100000011010</string>\n          </void>\n          <void index\="10">\n           <string>110001100001111001101000101110110001</string>\n          </void>\n          <void index\="11">\n           <string>110010000111011110000010110111010101</string>\n          </void>\n          <void index\="12">\n           <string>100100110101001001101000001101101101</string>\n          </void>\n          <void index\="13">\n           <string>001011101101001100111110101111001110</string>\n          </void>\n          <void index\="14">\n           <string>111010111111111100110100000011111100</string>\n          </void>\n          <void index\="15">\n           <string>110101101000001001000100101011100000</string>\n          </void>\n          <void index\="16">\n           <string>011011001011010001001000100000110101</string>\n          </void>\n          <void index\="17">\n           <string>011111111100000011010111010011010100</string>\n          </void>\n          <void index\="18">\n           <string>111001111110001110001110010100111010</string>\n          </void>\n          <void index\="19">\n           <string>000001111000001100101010000001101110</string>\n          </void>\n          <void index\="20">\n           <string>010000110000010010111110111000010101</string>\n          </void>\n          <void index\="21">\n           <string>100010010100110011000111101001101011</string>\n          </void>\n          <void index\="22">\n           <string>111010110001101011010001111101111100</string>\n          </void>\n          <void index\="23">\n           <string>000111110000110000000101100101000110</string>\n          </void>\n          <void index\="24">\n           <string>110000010111001001110001101010111100</string>\n          </void>\n          <void index\="25">\n           <string>011111101101001011011010011111100010</string>\n          </void>\n          <void index\="26">\n           <string>110101111101010100110010000011001101</string>\n          </void>\n          <void index\="27">\n           <string>101101111001010100101111100001110001</string>\n          </void>\n          <void index\="28">\n           <string>000110010100101111011011110010010010</string>\n          </void>\n          <void index\="29">\n           <string>110101010011101000111011100000010011</string>\n          </void>\n          <void index\="30">\n           <string>110001010001110011010100110000010001</string>\n          </void>\n          <void index\="31">\n           <string>111010101100111100100011001101010100</string>\n          </void>\n          <void index\="32">\n           <string>011000000000100001011010000100010001</string>\n          </void>\n          <void index\="33">\n           <string>100000110110000001010001001111010000</string>\n          </void>\n          <void index\="34">\n           <string>100011111110010011011011001110011111</string>\n          </void>\n          <void index\="35">\n           <string>101100001111100101001101100000100001</string>\n          </void>\n          <void index\="36">\n           <string>010000111011010110011001110011111000</string>\n          </void>\n          <void index\="37">\n           <string>100010100111110111001010100101111010</string>\n          </void>\n          <void index\="38">\n           <string>000110011110111011111000101000001000</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <int>7</int>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
